<div id="maptest">
	<div class="mapnav">
		<div class="mapnav-item police"><i class="fas fa-car"></i></div>
		<div class="mapnav-item ems"><i class="fas fa-briefcase-medical"></i></div>
		<div class="mapnav-item fire"><i class="fas fa-fire-extinguisher"></i></div>
		<div class="mapnav-item geometry"><i class="fas fa-square"></i></div>
	</div>
	<div id='map'></div>

	<div class="agora-remotes">
		<div id="agora_local"></div>
	</div>
</div>

<script src='https://api.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css' rel='stylesheet' />
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.4/mapbox-gl-draw.css' type='text/css' />
<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.4/mapbox-gl-draw.js'></script>



<script type="text/javascript">
  
	mapboxgl.accessToken = 'pk.eyJ1IjoiYnJ5YW5rbm91c2UiLCJhIjoiY2pxOHFlb3FoMzN1NTQzcGR0aGIxa240NSJ9.xgH24CaHc9SZuSCQ2Q24kw';

	// create map
	var map = new mapboxgl.Map({
		container: 'map',
		center: [-118.6260029,34.3861719],
		zoom: 9.5,
		style: 'mapbox://styles/bryanknouse/cjq8t7219dm5o2sptlq04ak6b'
	});

	// add drawing capabilities
	var draw = new MapboxDraw({
	    displayControlsDefault: false,
	    controls: {
	        polygon: true,
	        trash: true
	    }
	});
	map.addControl(draw);


	// add map marker to map on clicks
	map.on('click', function(e) {

		var lt = e.lngLat.lat
		var ln = e.lngLat.lng

		console.log(lt)
		console.log(ln)

		// create a HTML element for each feature
		var el = document.createElement('div');

		// check which marker is selected
		if ($(".mapnav-item.active").hasClass("police")) {
			el.className = 'marker police';
		} else if ($(".mapnav-item.active").hasClass("ems")) {
			el.className = 'marker ems';
		} else if ($(".mapnav-item.active").hasClass("fire")) {
			el.className = 'marker fire';
		} else if ($(".mapnav-item.active").hasClass("geometry")) {
			el.className = 'marker geometry';
		} else {
			el.className = 'marker plain';
		}

		// make a marker and add to the map
		new mapboxgl.Marker(el).setLngLat([ln,lt]).addTo(map);

		/// create the marker in the DB
		createMarker(lt,ln)
	});



	$(window).load(function() {

		//// check for latest markers and any new additions!
		var interval = setInterval(function(){
			checkMarkers()
		}, 5000)
		
	})


	//// generate 30,000 random map markers
	function goMarkers() {

		for (var i = 3000 - 1; i >= 0; i--) {
			
			// generate the lat and lng values
			var lati = 34.0000000 + Math.random()
			var long = -117.3000000 - Math.random() - Math.random()

			var marker = new mapboxgl.Marker().setLngLat([long,lati]).addTo(map);
		}
	}

</script>





<script type="text/javascript">
	
	var cuid = ""

	$(window).load(function() {

		var client = AgoraRTC.createClient({mode: 'live', codec: "h264"});

		client.init("eb87b1495576451392158959d91a19e4", function () {
			console.log("AgoraRTC client initialized");

			client.on('stream-published', function (evt) {

				console.log(" ")
			    console.log("Publish local stream successfully");
			});


		}, function (err) {
			console.log("AgoraRTC client init failed", err);
		});



		//// set up the join channel button
		setTimeout(function(){
			
			client.join(null, "test", null, function(uid) {
				console.log(" ")
				console.log("Client Join Callback:")
			    console.log("User " + uid + " join channel successfully");

			    cuid = uid

			    localStream = AgoraRTC.createStream({
				  streamID: cuid,
				  audio: true,
				  video: true,
				  screen: false}
				);

				localStream.init(function() {

					console.log(" ")
					console.log("getUserMedia successfully");
					localStream.play('agora_local');

					client.publish(localStream, function (err) {
						console.log(" ")
						console.log("Publish local stream error: " + err);
					});

				}, function (err) {
					console.log(" ")
				    console.log("getUserMedia failed", err);
				});


				client.on('stream-added', function (evt) {
					var stream = evt.stream;

					console.log(" ")
					console.log("New stream added: " + stream.getId());
					console.log(stream)
					console.log(" ")

					client.on('stream-subscribed', function (evt) {
						var remoteStream = evt.stream;

						console.log(" ")
						console.log("Subscribe remote stream successfully: " + stream.getId());

						console.log(" ")
						console.log("remote shit")

						var nhtml = "<div id='agora_remote" + stream.getId() + "' class='agora-player'></div>"
						$(".agora-remotes").append(nhtml)

						stream.play('agora_remote' + stream.getId());
					})

					client.subscribe(stream, function (err) {
						console.log("Subscribe stream failed", err);
					});
				});

					

			}, function(err) {
				console.log("Join channel failed", err);
			});

		}, 750)

	})

</script>

